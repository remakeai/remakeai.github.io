# Site
name: "REMAKE.AI"
title: "Let's make awesome 3D-printable pet robots"
description: "DIY 3D-printable pet robots for makers and STEM!"
logo: 'assets/images/logo.png'
favicon: 'favicon.ico'
baseurl: ''
google_analytics: 'G-LJLTHN5B4J'
disqus: 'remake-ai'
mailchimp-list: 'https://remake.us4.list-manage.com/subscribe?u=ce7793379be11c5c705d99df0&id=62f859271b'
include: ["_pages"]
permalink: /:title/

# Authors
authors:
  marketing:
    name: REMAKE.AI Marketing
    display_name: marketing
#    gravatar: e56154546cf4be74e393c62d1ae9f9d4
    email: marketing@remake.ai
    web: https://remake.ai
    twitter: https://twitter.com/remakeai/
    description: "REMAKE.AI marketing"
#  john:
#    name: John
#    display_name: John    
#    avatar: 'assets/images/avatar.png'
#    gravatar: b1cc14991db7a456fcd761680bbc8f81
#    email: wowthemesnet@gmail.com
#    web: https://www.wowthemes.net
#    twitter: https://twitter.com/wowthemesnet
#    description: "This is the author box. Write a short description of the author here. You are currently previewing Mediumish demo, a Jekyll template compatible with Github pages."

# Plugins
plugins:
  - jekyll-paginate
  - jekyll-sitemap
  - jekyll-feed
  - jekyll-seo-tag
  - jekyll-archives
    
# Archives
jekyll-archives:
  enabled:
    - categories
  layout: archive
  permalinks:
    category: '/category/:name/'
    
# Pagination 
paginate: 6
paginate_path: /page:num/
    
# Other
markdown: kramdown

kramdown:
  input: GFM
  syntax_highlighter: rouge
  syntax_highlighter_opts:
    block:
      line_numbers: true

# Adsense (change to "enabled" to activate, also your client id and ad slot. Create a new ad unit from your Adsense account to get the slot.)
adsense: "disabled"
adsense-data-ad-client: "ca-pub-3412143450191416"
adsense-data-ad-slot: "1363087678"

# Lazy Images ("enabled" or "disabled")
lazyimages: "disabled"

exclude: [changelog.md, LICENSE.txt, README.md, Gemfile, Gemfile.lock]

############################################################
# Site configuration for the WebP Generator Plugin
# The values here represent the defaults if nothing is set
webp:
  enabled: true
  
  # The quality of the webp conversion 0 to 100 (where 100 is least lossy)
  quality: 75

  # List of directories containing images to optimize, nested directories will only be checked if `nested` is true
  # By default the generator will search for a folder called `/img` under the site root and process all jpg, png and tiff image files found there.
  img_dir: ["assets/images"]

  # Whether to search in nested directories or not
  nested: false

  # add "".gif" to the format list to generate webp for animated gifs as well
  formats: [".jpeg", ".jpg", ".png", ".tiff"]

  # File extensions for animated gif files 
  gifs: [".gif"]

  # Set to true to always regenerate existing webp files
  regenerate: true

  # Local path to the WebP utilities to use (relative or absolute)
  # Omit or leave as nil to use the utilities shipped with the gem, override only to use your local install
  # Eg : "/usr/local/bin/cwebp"
  webp_path: nil

  # List of files or directories to exclude
  # e.g. custom or hand generated webp conversion files
  exclude: []

  # append '.webp' to filename after original extension rather than replacing it.
  # Default transforms `image.png` to `image.webp`, while changing to true transforms `image.png` to `image.png.webp`
  append_ext: false
############################################################
